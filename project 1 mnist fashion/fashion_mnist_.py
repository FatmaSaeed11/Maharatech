# -*- coding: utf-8 -*-
"""Fashion MNIST  .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nQPmbrC4zR_ulKtHgG0qMulvtzv7lvEd
"""

import numpy as np
import tensorflow as tf
import pandas as pd
import matplotlib.pyplot as plt
from tensorflow import keras

mnist=tf.keras.datasets.fashion_mnist

(training_images,training_lables),(test_images,test_lables)=mnist.load_data()

class_names=['T-shirt/top','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankel boot']

training_images.shape

len(training_lables)

test_images.shape

len(test_lables)

plt.figure()
plt.imshow(training_images[0])

plt.figure()
plt.imshow(training_images[1])

plt.figure()
plt.imshow(training_images[0])
plt.colorbar()
plt.grid(False)
plt.show

training_images=training_images/255
test_images=test_images/255

plt.figure(figsize=(10,10))
for i in range (25):
  plt.subplot(5,5,i+1)
  plt.xticks([]) # to hide x axiss
  plt.yticks([])
  plt.grid(False)
  plt.imshow(training_images[i],cmap=plt.cm.binary)
  plt.xlabel(class_names[training_lables[i]])
plt.show()

model=keras.Sequential(
    [
        keras.layers.Flatten(input_shape=(28,28)),
        keras.layers.Dense(128,activation='relu'),
        keras.layers.Dense(10,activation='softmax')
    ]
)

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy']
              )

model.fit(training_images,training_lables,epochs=10)

test_loss,test_acc=model.evaluate(test_images,test_lables,verbose=2)
print(test_acc)

predict=model.predict(test_images)
np.argmax(predict[5])

plt.figure(figsize=(10,10))
for i in range (25):
  plt.subplot(5,5,i+1)
  plt.xticks([]) # to hide x axiss
  plt.yticks([])
  plt.grid(False)
  plt.imshow(test_images[i],cmap=plt.cm.binary)
  plt.xlabel(class_names[test_lables[i]])
plt.show()

predict=model.predict(test_images)
np.argmax(predict[0])

predict=model.predict(test_images)
np.argmax(predict[8])

